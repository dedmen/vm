[   ["assertEqual",     { getText (configFile >> "nested_tests" >> "node") }, "0"],
    ["assertEqual",     { getText (configFile / "nested_tests" / "nested1" / "node") }, "1"],
    ["assertEqual",     { getText ((((configFile / "nested_tests") >> "nested1") / "nested2") >> "node") }, "2"],
    ["assertEqual",     { getText ((((((configFile / "nested_tests") >> "nested1") / "nested2") >> "nested3") / "nested4") >> "node") }, "4"],
    ["assertEqual",     { getArray (configFile / "type_tests" / "type_array") }, [1, "test", [1, 2, 3]]],
    ["assertEqual",     { getArray (configFile / "type_tests" / "type_anytext_array") }, ["any", "fancy", "text", "should", "be", "accepted"]],
    ["assertEqual",     { getText (configFile / "type_tests" / "type_string") }, "test"],
    ["assertEqual",     { getText (configFile / "type_tests" / "type_anytext") }, "any fancy text should be accepted"],
    ["assertEqual",     { getNumber (configFile / "type_tests" / "type_scalar") }, 1],
    ["assertTrue",      { isArray (configFile / "type_tests" / "type_array") }],
    ["assertTrue",      { isArray (configFile / "type_tests" / "type_anytext_array") }],
    ["assertFalse",     { isArray (configFile / "type_tests" / "type_string") }],
    ["assertFalse",     { isArray (configFile / "type_tests" / "type_anytext") }],
    ["assertFalse",     { isArray (configFile / "type_tests" / "type_scalar") }],
    ["assertFalse",     { isArray (configFile / "type_tests" / "type_class") }],
    ["assertFalse",     { isText (configFile / "type_tests" / "type_array") }],
    ["assertFalse",     { isText (configFile / "type_tests" / "type_anytext_array") }],
    ["assertTrue",      { isText (configFile / "type_tests" / "type_string") }],
    ["assertTrue",      { isText (configFile / "type_tests" / "type_anytext") }],
    ["assertFalse",     { isText (configFile / "type_tests" / "type_scalar") }],
    ["assertFalse",     { isText (configFile / "type_tests" / "type_class") }],
    ["assertFalse",     { isNumber (configFile / "type_tests" / "type_array") }],
    ["assertFalse",     { isNumber (configFile / "type_tests" / "type_anytext_array") }],
    ["assertFalse",     { isNumber (configFile / "type_tests" / "type_string") }],
    ["assertFalse",     { isNumber (configFile / "type_tests" / "type_anytext") }],
    ["assertTrue",      { isNumber (configFile / "type_tests" / "type_scalar") }],
    ["assertFalse",     { isNumber (configFile / "type_tests" / "type_class") }],
    ["assertFalse",     { isClass (configFile / "type_tests" / "type_array") }],
    ["assertFalse",     { isClass (configFile / "type_tests" / "type_anytext_array") }],
    ["assertFalse",     { isClass (configFile / "type_tests" / "type_string") }],
    ["assertFalse",     { isClass (configFile / "type_tests" / "type_anytext") }],
    ["assertFalse",     { isClass (configFile / "type_tests" / "type_scalar") }],
    ["assertTrue",      { isClass (configFile / "type_tests" / "type_class") }]
]